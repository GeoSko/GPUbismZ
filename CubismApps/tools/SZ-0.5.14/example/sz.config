#============================================================
[ENV]
#location of the sz.jar
#SZ_CLASSPATH here is only used by C version, and it will be generated automatically in the compilation of the sz package.
#SZ_CLASSPATH= /home/fti/workspace-java/SZ_Project/SZ-0.5.14/SZ/lib
#SZ_CLASSPATH= /home/fti/workspace-java/SZ_Project/bin
SZ_CLASSPATH = /home/chatzidp/DRain_membuffer/soft/SZ-0.5.14/SZ/lib


#maximum heap memory to be used (default value may be 32MB)
#format 1024m means 1024 MB
MAX_HEAP=4096m

#solution: SZ, .....
sol_name = SZ

[PARAMETER]
#The following parameter "offset" can be used to tune the compression ratio for hard-to-compress data
#Its value should be 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10.
#Generally, we recommend offset=2 or 3. But for some data sets, we find other settings (such as offset=9) may lead to better results (higher compression ratios).
offset = 2

#errorBoundMode: four options
#ABS_AND_REL, ABS_OR_REL, ABS, REL
errorBoundMode = ABS

#absolute Error Bound
#absErrBound is to limit the (de)compression errors to be within an absolute error. For example, absErrBound=0.0001 means the decompressed value must be in [V-0.0001,V+0.0001], where V is the original true value.
absErrBound = 0.000001
#absErrBound = 0.05

#relative Bound Ratio
#relErrBound is to limit the (de)compression errors by considering the global data value range size (i.e., taking into account the range size (max_value - min_value)).
#For example, suppose relBoundRatio is set to 0.01, and the data set is {100,101,102,103,104,...,110}, so the global value range size is 110-100=10, so the error bound will actually be 10*0.01=0.1, from the perspective of "relBoundRatio"
relBoundRatio = 0.001

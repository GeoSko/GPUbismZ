SHELL := /bin/bash

CC ?= gcc
LD ?= gcc

# core
bs ?= 32
ap ?= float
weps ?= 1e-6
precdiv ?= 0
microfusion ?= 2
accurateweno ?= 0
omp ?= 1
align ?= 16
bgq ?= 0
qpx ?= 0
qpxemu ?= 0
sequoia ?= 0

# +node
hdf ?= 0
numa ?= 0
cvt ?= 0

# +cluster
fftw ?= 0

needs_lz ?= 1

#compression stage-1 (floating point)
wavz ?= 0

fpc ?= 0
fpzip ?= 0
fpzip_eps ?= 32
shuffle ?= 0
zerobits ?= 0
drain ?= 0
zfp ?= 0
sz ?= 0
isa ?= 0
wblosc ?= 0

#compression stage-2 (encoding)
zlib ?= 0
lz4 ?= 0
lzf ?= 0
lzma ?= 0
zopfli ?=0
zstd ?= 0
zstd0 ?=0
blosc ?= 0

# shuffling before encoding
zshuffle ?= 0


#fpc2 ?= 0	# this works but I do not know what we compress (mix below)
#fpzip2 ?= 0	# this does not seem to work when the stream is a mix of integers and floats
#

spdp3 ?= 0	# for wavz + spdp
fpzip3 ?= 0	# for wavz + fpz
zfp3 ?= 0	# for wavz + zfp
sz3 ?= 0	# for wavz + sz
fpc3 ?= 0	# for wavz + fpc
shuffle3 ?= 0	# for wavz + shuffle3

###############################################################################

ifeq "$(wavz)" "0"
ifeq "$(fpc)" "0"
ifeq "$(fpzip)" "0"
ifeq "$(drain)" "0"
ifeq "$(zfp)" "0"
ifeq "$(sz)" "0"
ifeq "$(isa)" "0"
#wavz = 1
endif
endif
endif
endif
endif
endif
endif


ifeq "$(sz)" "1"
needs_lz = 0
endif


ifeq "$(zlib)" "0"
ifeq "$(lz4)" "0"
ifeq "$(lzf)" "0"
ifeq "$(fpc2)" "0"
ifeq "$(fpzip2)" "0"
#zlib = 1
endif
endif
endif
endif
endif

###############################################################################

CPPFLAGS+= $(extra) #-Wall

ifeq "$(sequoia)" "1"
	CPPFLAGS += -D_SEQUOIA_
endif

ifeq "$(ap)" "float"
        CPPFLAGS += -D_FLOAT_PRECISION_
endif

ifeq "$(accurateweno)" "1"
        CPPFLAGS += -D_ACCURATEWENO_
endif

CPPFLAGS += -D_MICROFUSION_=$(microfusion)

ifeq "$(config)" "release"
	ifeq "$(CC)" "icc"
		OPTFLAGS+= -DNDEBUG -O3 -xHOST  -ip -ansi-alias -fno-fnalias -inline-level=1
		ifeq "$(ap)" "float"
			CPPFLAGS += -fp-model precise
		else
			CPPFLAGS += -fast
		endif
	else
		ifeq "$(bgq)" "1"
			OPTFLAGS += -O3 -qsmp=omp:speculative -qhot=level=1  -qarch=qp -qtune=qp # -qlibmpi -qnounwind -qalias=noaddrtaken:allptrs:ansi:global:restrict:typeptr -qnoeh
			#-qnoeh -qprefetch -qsimd=auto #-qnounroll #=assistthread
			#OPTFLAGS += -O4 -qsmp=speculative -qhot=level=2  -qarch=qp -qtune=qp -qnoeh # -qsimd=auto #-qprefetch  #-qnounroll #=assistthread
			#OPTFLAGS += -O3 -qsmp=speculative -qhot=level=1  -qarch=qp -qtune=qp -qprefetch #-qnounroll #=assistthread
			#OPTFLAGS += -O3 -qsmp=omp -qhot=level=1  -qarch=qp -qtune=qp -qprefetch #=assistthread
		else
			#OPTFLAGS += -O3 -DNDEBUG -xHOST -ip -ansi-alias -fno-fnalias -inline-level=1
			OPTFLAGS += -O3 -fno-expensive-optimizations -falign-functions=16 -DNDEBUG #one can leave out falign to the default of O2 level  which is machine-dependent
		endif

		OPTFLAGS += -DNDEBUG
	endif
else
	CPPFLAGS += -g
endif

##CPPFLAGS += -Wno-deprecated

ifeq "$(cvt)" "1"
	CPPFLAGS += -D_USE_CVT_
endif

ifeq "$(precdiv)" "1"
CPPFLAGS += -D_PREC_DIV_
endif

ifeq "$(precdiv)" "-1"
	CPPFLAGS += -D_PREC_DIV_NONE_
	ifeq "$(CC)" "icc"
		#OPTFLAGS += -ipo
	endif
endif

ifeq "$(ap)" "float"
	CPPFLAGS += -D_SP_COMP_
endif

ifeq "$(qpx)" "1"
	CPPFLAGS += -D_QPX_
endif

ifeq "$(qpxemu)" "1"
	CPPFLAGS += -D_QPXEMU_ -msse -msse2 #-mxop
#-march=native # -mfma4 -march=native
# -msse -msse2 -msse4 -mfma -mfma4 -march=btver1 # -march=native -mtune=native  # -mfma -mfma4
endif

ifeq "$(omp)" "1"
	ifeq "$(CC)" "icc"
		CPPFLAGS += -openmp
		OPTFLAGS += -openmp
	else
		ifeq "$(bgq)" "1"
			CPPFLAGS += -qsmp=omp:speculative
			OPTFLAGS += -qsmp=omp:speculative
		else
			CPPFLAGS += -fopenmp
			OPTFLAGS += -fopenmp
		endif
	endif
endif

###############################################################################

numa-inc ?=.
numa-lib ?=.
hdf-inc ?=.
hdf-lib ?=.

###############################################################################
# Testing machines
ifneq "$(findstring panda,$(shell hostname))" ""
#	hdf-inc = /opt/hdf5_openmpi/include
#	hdf-lib = /opt/hdf5_openmpi/lib
	hdf-inc = /opt/hdf5_mpich/include
	hdf-lib = /opt/hdf5_mpich/lib
endif

ifneq "$(findstring falcon,$(shell hostname))" ""
#       hdf-inc = /opt/hdf5_openmpi/include
#       hdf-lib = /opt/hdf5_openmpi/lib
	hdf-inc = /opt/hdf5_mpich/include
	hdf-lib = /opt/hdf5_mpich/lib
endif
###############################################################################

CPPFLAGS += -D_ALIGNBYTES_=$(align) -D_BLOCKSIZE_=$(bs) -D_BLOCKSIZEX_=$(bs) -D_BLOCKSIZEY_=$(bs) -D_BLOCKSIZEZ_=$(bs) -DWENOEPS=$(weps)
CPPFLAGS += -I../../../Cubism/source/ -I../source -I../../Compressor/source/ -I/usr/local/include/
CPPFLAGS += -I../../../../Cubism/source

ifeq "$(hdf)" "1"
	CPPFLAGS += -I$(hdf-inc) -D_USE_HDF_
	LIBS += -L$(hdf-lib) -lhdf5
endif

CPPFLAGS +=  -I$(hdf-inc)

LIBS += -lstdc++ -lm

ifeq "$(needs_lz)" "1"
LIBS += -lz
endif

ifeq "$(findstring Darwin,$(shell uname))" ""
	LIBS += -lrt
endif

ifeq "$(bgq)" "1"
ifeq "$(hpm)" "1"
	CPPFLAGS += -D_USE_HPM_
	LIBS += /gpfs/DDNgpfs1/walkup/mpi_trace/bgq/lib/libmpihpm_smp.a \
			/bgsys/drivers/ppcfloor/bgpm/lib/libbgpm.a \
			-L/bgsys/drivers/ppcfloor/spi/lib -lSPI_upci_cnk -lSPI_l1p -lSPI #-lmassv
endif
endif

ifeq "$(bgq)" "1"
       CPPFLAGS += -I..../zlib/include
       LIBS += -L..../zlib/lib
endif

ifeq "$(numa)" "1"
	CPPFLAGS += -D_USE_NUMA_ -I$(numa-inc)
	LIBS += -L$(numa-lib) -lnuma
endif

###############################################################################
# Compression Options

ifeq "$(wavz)" "1"
       CPPFLAGS += -D_USE_WAVZ_
endif

ifeq "$(fpc)" "1"
       CPPFLAGS += -D_USE_FPC_  -I../../tools/fpc
       LIBS += -L../../tools/fpc -lfpc
endif

ifeq "$(fpzipX)" "1"
	CPPFLAGS += -D_USE_FPZIP_  -I../../../tools/fpzip/inc -I../fpzip/inc -I../../tools/fpzip/inc
	LIBS += -L../../../tools/fpzip/lib -L../fpzip/lib -L../../tools/fpzip/lib -lfpzip
	ifeq "$(fpzip_eps)" "32"
		CPPFLAGS += -D_FPZIP_32_
	else ifeq "$(fpzip_eps)" "24"
		CPPFLAGS += -D_FPZIP_24_
	else ifeq "$(fpzip_eps)" "16"
		CPPFLAGS += -D_FPZIP_16_
	endif
endif

ifeq "$(fpzip)" "1"
	CPPFLAGS += -D_USE_FPZIP_  -I../../tools/fpzip-1.1.0/inc
	LIBS += -L../../tools/fpzip-1.1.0/lib -lfpzip
	ifeq "$(fpzip_eps)" "32"
		CPPFLAGS += -D_FPZIP_32_
	else ifeq "$(fpzip_eps)" "24"
		CPPFLAGS += -D_FPZIP_24_
	else ifeq "$(fpzip_eps)" "16"
		CPPFLAGS += -D_FPZIP_16_
	endif
endif

ifeq "$(drain)" "1"
	CPPFLAGS += -D_USE_DRAIN_  -I${HOME}/usr/DRain/include
	LIBS += -L${HOME}/usr/DRain/lib -lDRain
endif

ifeq "$(zfp)" "1"
	CPPFLAGS += -D_USE_ZFP_  -I../../tools/zfp-0.5.0/inc
	LIBS += -L../../tools/zfp-0.5.0/lib -lzfp
endif


sz148 ?= 0

ifeq "$(sz)" "1"

ifeq "$(sz148)" "1"
	CPPFLAGS += -D_USE_SZ148_ -D_USE_SZ_  -I../../tools/sz-1.4.8-beta/sz/include/
	LIBS += ../../tools/sz-1.4.8-beta/sz/.libs/libsz.a ../../tools/sz-1.4.8-beta/zlib/.libs/libzlib.a
else
	CPPFLAGS += -D_USE_SZ_  -I../../tools/SZ/build/include/
	LIBS += -L../../tools/SZ/build/lib -lsz -lzlib

	# CPPFLAGS += -D_USE_SZ_  -I../../tools/SZ/sz/include/
	# LIBS += ../../tools/SZ/sz/.libs/libsz.a ../../tools/SZ/zlib/.libs/libzlib.a
endif
endif

ifeq "$(isa)" "1"
	CPPFLAGS += -D_USE_ISA_  -I../../tools/ISABELA-compress-0.2.1/include
	LIBS += -L../../tools/ISABELA-compress-0.2.1/lib -lisabela -lgsl
endif

ifeq "$(shuffle)" "1"
       CPPFLAGS += -D_USE_SHUFFLE_
endif

ifeq "$(zerobits)" "4"
       CPPFLAGS += -D_USE_ZEROBITS_
       CPPFLAGS += -D_ZEROBITS_=4
endif
ifeq "$(zerobits)" "8"
       CPPFLAGS += -D_USE_ZEROBITS_
       CPPFLAGS += -D_ZEROBITS_=8
endif
ifeq "$(zerobits)" "12"
       CPPFLAGS += -D_USE_ZEROBITS_
       CPPFLAGS += -D_ZEROBITS_=12
endif
ifeq "$(zerobits)" "16"
       CPPFLAGS += -D_USE_ZEROBITS_
       CPPFLAGS += -D_ZEROBITS_=16
endif

ifeq "$(wblosc)" "1"
       CPPFLAGS += -D_USE_WBLOSC_ -I../../tools/c-blosc/include
       LIBS +=  -L../../tools/c-blosc/lib -lblosc -lz
endif


###############################################################################
# Encoding Options

ifeq "$(zlib)" "1"
       CPPFLAGS += -D_USE_ZLIB_
       LIBS +=  -lz
endif

ifeq "$(lz4)" "1"
       CPPFLAGS += -D_USE_LZ4_  -I../../tools/lz4
       LIBS += -L../../tools/lz4 -llz4
endif

ifeq "$(lzf)" "1"
       CPPFLAGS += -D_USE_LZF_  -I../../tools/lzf
       LIBS += -L../../tools/lzf -llzf
endif

ifeq "$(lzma)" "1"
       CPPFLAGS += -D_USE_LZMA_  -I../../tools/xz-5.0.5/src/liblzma/api
       LIBS += -L../../tools/xz-5.0.5/src/liblzma/.libs -llzma
endif

ifeq "$(zopfli)" "1"
       CPPFLAGS += -D_USE_ZOPFLI_  -I../../tools/zopfli
       LIBS += -L../../tools/zopfli -lzopfli
endif

ifeq "$(zstd)" "1"
       CPPFLAGS += -D_USE_ZSTD_ -I../../tools/zstd-dev/zlibWrapper -I../../tools/zstd-dev/lib -DZWRAP_USE_ZSTD=1
       LIBS +=  -lz -L../../tools/zstd-dev/zlibWrapper -L../../tools/zstd-dev/lib -lzstd2 -lzstd #-lz
endif

ifeq "$(zstd0)" "1"
       CPPFLAGS += -D_USE_ZSTD0_ -I../../tools/zstd-dev/lib
       LIBS +=  -lz -L../../tools/zstd-dev/zlibWrapper -lzstd
endif

ifeq "$(blosc)" "1"
       CPPFLAGS += -D_USE_BLOSC_ -I../../tools/c-blosc/include
       LIBS +=  -L../../tools/c-blosc/lib -lblosc -lz
endif


ifeq "$(fpc2)" "1"
       CPPFLAGS += -D_USE_FPC2_  -I../../tools/fpc
       LIBS += -L../../tools/fpc -lfpc
endif

ifeq "$(fpzip2)" "1"
       CPPFLAGS += -D_USE_FPZIP2_  -I../../../tools/fpzip/inc
       LIBS += -L../../../tools/fpzip/lib -lfpzip
endif


ifeq "$(zshuffle)" "1"
       CPPFLAGS += -D_USE_ZSHUFFLE_
endif

# Extensions to the Wavelet-based Compression (wavz)

ifeq "$(spdp3)" "1"
	CPPFLAGS += -D_USE_SPDP3_  -I../../tools/spdp
	LIBS += -L../../tools/spdp -lspdp
#	LIBS += ../../tools/spdp/libspdp.a
endif

ifeq "$(fpzip3)" "1"
	CPPFLAGS += -D_USE_FPZIP3_  -I../../tools/fpzip-1.1.0/inc
	LIBS += -L../../tools/fpzip-1.1.0/lib -lfpzip
	ifeq "$(fpzip_eps)" "32"
		CPPFLAGS += -D_FPZIP_32_
	else ifeq "$(fpzip_eps)" "24"
		CPPFLAGS += -D_FPZIP_24_
	else ifeq "$(fpzip_eps)" "16"
		CPPFLAGS += -D_FPZIP_16_
	endif

	CPPFLAGS += -D_USE_FPZIP3_  -I../../../tools/fpzip/inc
	LIBS += -L../../../tools/fpzip/lib -lfpzip
endif

ifeq "$(zfp3)" "1"
	CPPFLAGS += -D_USE_ZFP3_  -I../../tools/zfp-0.5.0/inc
	LIBS += -L../../tools/zfp-0.5.0/lib -lzfp
endif

ifeq "$(fpc3)" "1"
	CPPFLAGS += -D_USE_FPC3_  -I../../tools/fpc
	LIBS += -L../../tools/fpc -lfpc
endif

ifeq "$(sz3)" "1"
#	CPPFLAGS += -D_USE_SZ3_  -I../../tools/sz-1.4.8-beta/sz/include/
#	LIBS += ../../tools/sz-1.4.8-beta/sz/.libs/libsz.a ../../tools/sz-1.4.8-beta/zlib/.libs/libzlib.a

	CPPFLAGS += -D_USE_SZ3_  -I../../tools/SZ/sz/include/
	LIBS += ../../tools/SZ/sz/.libs/libsz.a ../../tools/sz-1.4.8-beta/zlib/.libs/libzlib.a
endif

ifeq "$(shuffle3)" "1"
       CPPFLAGS += -D_USE_SHUFFLE3_
endif
